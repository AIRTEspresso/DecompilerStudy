// Generated by Java* Fuzzer test generator (1.0.001). Thu Jan  6 01:59:28 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4035108823L;
    public static byte byFld=85;
    public static int iFld=-14;
    public static long lArrFld[]=new long[N];
    public static long lArrFld1[][]=new long[N][N];
    public int iArrFld[][][]=new int[N][N][N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -2113223696L);
        FuzzerUtils.init(Test.lArrFld1, -10752L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i8=30, i9=12, i11=52697, i12=52, i13=3052, i14=12, iArr1[]=new int[N];
        short s1=-29887;
        double d1=-112.124887;
        float f=0.536F;
        boolean b1=true;

        FuzzerUtils.init(iArr1, -206);

        i8 >>>= i8;
        s1 -= (short)d1;
        i8 = i8;
        i9 &= i9;
        for (int i10 : iArr1) {
            Test.instanceCount *= 8;
            for (i11 = 1; 4 > i11; i11++) {
                for (i13 = i11; i13 < 2; ++i13) {
                    Test.instanceCount += (long)d1;
                    i14 = (int)f;
                    b1 = b1;
                    Test.instanceCount <<= i10;
                    i14 = 4;
                }
                i9 = (int)Test.instanceCount;
                s1 *= (short)Test.instanceCount;
            }
        }
        vMeth1_check_sum += i8 + s1 + Double.doubleToLongBits(d1) + i9 + i11 + i12 + i13 + i14 +
            Float.floatToIntBits(f) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(double d, int i1, int i2) {

        int i3=27396, i4=-203, i6=0, i7=-181, i15=-46561, i16=5, iArr[]=new int[N];
        boolean b=false;
        short s=-21421;

        FuzzerUtils.init(iArr, 5);

        i2 -= i2;
        for (i3 = 162; 5 < i3; i3 -= 2) {
            if (!(b = (b = (false || (i3 != 6068699970408286646L))))) continue;
            for (i6 = 1; 20 > i6; ++i6) {
                switch ((i3 % 1) + 116) {
                case 116:
                    i7 += s;
                    break;
                default:
                    vMeth1();
                    try {
                        i7 = (210 / i1);
                        i1 = (i3 / -50725);
                        i4 = (i1 / i2);
                    } catch (ArithmeticException a_e) {}
                    Test.lArrFld[i3] += Test.byFld;
                    iArr[i3 - 1] *= i6;
                }
                for (i15 = i3; i15 < 2; i15++) {
                    i1 >>= i1;
                    iArr[i6] /= (int)(s | 1);
                    i2 -= i3;
                    Test.byFld += (byte)(164 + (i15 * i15));
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + (b ? 1 : 0) + i6 + i7 + s + i15 + i16 +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(byte by) {

        int i=5, i17=-56, i18=-12, i19=-8347, i20=-3, i21=-4, i22=3516, i23=5, i24=37066, iArr2[]=new int[N];
        short s2=18955;
        float f1=14.177F;
        double d2=26.45238;
        boolean b2=false;

        FuzzerUtils.init(iArr2, 0);

        i = (iMeth(31.60701, i, i) * s2);
        for (i17 = 4; i17 < 269; i17++) {
            Test.lArrFld = Test.lArrFld;
            for (i19 = i17; i19 < 6; i19++) {
                try {
                    i = (iArr2[i17] % Test.iFld);
                    iArr2[i17] = (Test.iFld / i20);
                    iArr2[i19 + 1] = (iArr2[i19 - 1] % i18);
                } catch (ArithmeticException a_e) {}
                s2 += (short)(i19 * i19);
                for (i21 = 1; i21 < 1; i21++) {
                    s2 += (short)(i21 | (long)f1);
                    Test.lArrFld1 = Test.lArrFld1;
                }
                for (i23 = 1; i23 < 1; i23++) {
                    s2 -= (short)-4;
                    Test.instanceCount += (i23 ^ i24);
                    i20 += (int)d2;
                    if (i != 0) {
                        vMeth_check_sum += by + i + s2 + i17 + i18 + i19 + i20 + i21 + i22 + Float.floatToIntBits(f1) +
                            i23 + i24 + Double.doubleToLongBits(d2) + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
                        return;
                    }
                    if (b2) continue;
                }
            }
        }
        vMeth_check_sum += by + i + s2 + i17 + i18 + i19 + i20 + i21 + i22 + Float.floatToIntBits(f1) + i23 + i24 +
            Double.doubleToLongBits(d2) + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        float f2=68.910F;
        double d3=7.25772;
        short s3=6478;
        int i25=240, i26=-8353, i27=-85, i28=-78, i29=32102, i30=3;

        vMeth((byte)(-12));
        iArrFld[(1 >>> 1) % N][(Test.iFld >>> 1) % N][(Test.iFld >>> 1) % N] = (int)f2;
        d3 *= Test.iFld;
        d3 -= Test.iFld;
        Test.iFld = s3;
        Test.instanceCount >>>= Test.iFld;
        fArrFld[(Test.iFld >>> 1) % N] += 48824;
        Test.iFld -= 62903;
        Test.iFld += Test.iFld;
        for (i25 = 2; i25 < 388; ++i25) {
            i26 = (int)-52L;
            Test.iFld += (int)Test.instanceCount;
            i26 = (int)Test.instanceCount;
            i26 >>= Test.byFld;
            for (i27 = 3; i27 < 65; i27++) {
                i28 &= i28;
                i28 += i27;
                i28 = (int)3250L;
                iArrFld[i27][i25 + 1][i27] >>>= (int)Test.instanceCount;
                Test.lArrFld[i27 + 1] = Test.iFld;
                switch (((i27 % 5) * 5) + 103) {
                case 126:
                    for (i29 = 2; 1 < i29; i29 -= 3) {
                        Test.instanceCount += (i29 + i27);
                    }
                    iArrFld[i27][i25][i27] += i26;
                    Test.instanceCount += -14;
                    Test.instanceCount = i29;
                    break;
                case 109:
                    f2 += s3;
                    Test.instanceCount *= i25;
                    f2 = Test.instanceCount;
                    break;
                case 123:
                    Test.iFld -= i29;
                case 127:
                    iArrFld[i25 + 1][i25][i25 + 1] <<= s3;
                    break;
                case 119:
                    Test.instanceCount -= (long)d3;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("f2 d3 s3 = " + Float.floatToIntBits(f2) + "," + Double.doubleToLongBits(d3) + "," +
            s3);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("Test.lArrFld Test.lArrFld1 iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld1) + "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
