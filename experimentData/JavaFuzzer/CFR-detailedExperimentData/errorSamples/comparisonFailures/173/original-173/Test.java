// Generated by Java* Fuzzer test generator (1.0.001). Wed Jan  5 22:30:00 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1723977013L;
    public byte byFld=15;
    public volatile float fFld=-93.335F;
    public static int iArrFld[]=new int[N];
    public boolean bArrFld[][][]=new boolean[N][N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 33391);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static int iMeth(int i1) {


        i1 = (--i1);
        long meth_res = i1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth2() {

        int i3=172;

        i3 = i3;
        vMeth2_check_sum += i3;
    }

    public static void vMeth1() {

        int i4=53, i5=-58396, i6=-8681, i7=-8, i8=11268, i9=21390;
        byte by=36;
        boolean b=false;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)7937);

        vMeth2();
        i4 &= (int)Test.instanceCount;
        for (i5 = 3; i5 < 226; ++i5) {
            by = (byte)i6;
            i6 = i6;
            Test.instanceCount += (long)26.895F;
            i7 = 1;
            do {
                if (b) break;
                b = b;
                for (i8 = 1; 1 > i8; ++i8) {
                    i4 += (i8 ^ i9);
                    i4 = (int)Test.instanceCount;
                    i9 += i8;
                    sArr[i5 + 1] >>>= (short)i4;
                    i9 = 225;
                }
            } while (++i7 < 7);
        }
        vMeth1_check_sum += i4 + i5 + i6 + by + i7 + (b ? 1 : 0) + i8 + i9 + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(float f) {

        int i2=-2, i10=5, i11=64798, i12=-1;
        short s=-23269;

        i2 = 1;
        while (++i2 < 224) {
            vMeth1();
        }
        for (i10 = 173; i10 > 2; i10 -= 3) {
            Test.instanceCount ^= i10;
            switch (((-156 >>> 1) % 1) + 119) {
            case 119:
                i11 = i10;
                i11 *= -110;
                Test.iArrFld[i10] = i10;
                switch ((i10 % 2) + 61) {
                case 61:
                    Test.instanceCount = i2;
                    try {
                        i11 = (i10 % i10);
                        i11 = (37353 % i11);
                        i11 = (-10 / i11);
                    } catch (ArithmeticException a_e) {}
                    i11 = i10;
                    break;
                case 62:
                    s = (short)i12;
                    Test.instanceCount <<= i11;
                    i12 -= i2;
                    break;
                }
                break;
            default:
                i12 += -24524;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i2 + i10 + i11 + s + i12;
    }

    public void mainTest(String[] strArr1) {

        int i=-138, i13=186, i14=6, i15=-12281;
        double d=0.124347, dArr[]=new double[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 1447614521L);
        FuzzerUtils.init(dArr, 45.35738);

        i = (int)((++i) * ((12 + iMeth(-56875)) * Test.instanceCount));
        i <<= (-21451 + (--byFld));
        vMeth(fFld);
        d = d;
        lArr[(i >>> 1) % N] = lArr[(i >>> 1) % N];
        i13 = 1;
        do {
            dArr[i13 + 1] = -126.10907;
            for (i14 = 101; i14 > 6; i14 -= 2) {
                bArrFld[i14 - 1][i14 - 1] = bArrFld[i14 + 1][i14 - 1];
                i = 43276;
                byFld += (byte)i14;
                if (true) continue;
            }
            i += (i13 ^ Test.instanceCount);
        } while (++i13 < 248);

        FuzzerUtils.out.println("i d i13 = " + i + "," + Double.doubleToLongBits(d) + "," + i13);
        FuzzerUtils.out.println("i14 i15 lArr = " + i14 + "," + i15 + "," + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount byFld fFld = " + Test.instanceCount + "," + byFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.iArrFld bArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
