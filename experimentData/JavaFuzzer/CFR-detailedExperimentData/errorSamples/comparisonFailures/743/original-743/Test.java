// Generated by Java* Fuzzer test generator (1.0.001). Thu Jan  6 02:36:34 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=5122183147755864801L;
    public static int iFld=-10;
    public static boolean bFld=true;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -23);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f) {

        int i1=6, i2=-24211, i3=38823, i4=-3652, i5=-6, i6=-54809;
        double d=-69.2332, dArr[]=new double[N];
        short s=-32617;

        FuzzerUtils.init(dArr, -2.39078);

        for (i1 = 9; 333 > i1; ++i1) {
            Test.instanceCount = (long)f;
            Test.iFld = (int)0L;
            i2 -= i2;
            for (i3 = i1; i3 < 5; ++i3) {
                switch ((i3 % 9) + 116) {
                case 116:
                    f += (float)d;
                    Test.instanceCount -= i3;
                    f += (i3 - s);
                    for (i5 = 1; i5 < 1; i5++) {
                        i2 >>= i6;
                        dArr[i5] -= i4;
                        d -= Test.instanceCount;
                        i4 = (int)f;
                        i6 -= -9;
                    }
                case 117:
                    Test.iFld >>= (int)Test.instanceCount;
                case 118:
                    Test.iFld -= i1;
                case 119:
                    i4 <<= 0;
                    break;
                case 120:
                    i2 = -128;
                    break;
                case 121:
                    Test.iArrFld[i1] %= (int)(i2 | 1);
                    break;
                case 122:
                    Test.iFld >>= i2;
                case 123:
                    s = (short)i1;
                    break;
                case 124:
                    i4 += i3;
                    break;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i1 + i2 + i3 + i4 + Double.doubleToLongBits(d) + s + i5 + i6 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l) {

        float f1=1.486F;
        int i7=-224, i8=-32262, i9=-91, i10=9, i11=107;

        Test.iFld <<= (int)(-((Test.instanceCount++) - (Test.iFld++)));
        Test.iFld -= (Test.iArrFld[(-236 >>> 1) % N] - iMeth(f1));
        i7 = 1;
        while (++i7 < 256) {
            for (i8 = 1; i8 < 6; i8++) {
                i9 += (((i8 * i7) + Test.iFld) - i9);
                i9 -= Test.iFld;
                Test.iFld >>>= (int)Test.instanceCount;
                Test.iFld -= i9;
                for (i10 = 2; i10 > 1; i10 -= 3) {
                    Test.iFld += i8;
                    switch (((i9 >>> 1) % 3) + 6) {
                    case 6:
                        i11 += (int)Test.instanceCount;
                        l = i11;
                        i9 += i10;
                        if (i9 != 0) {
                            vMeth1_check_sum += l + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + i11;
                            return;
                        }
                    case 7:
                        Test.iArrFld[i7] += 27231;
                        break;
                    case 8:
                        Test.iFld += (int)f1;
                    }
                }
            }
        }
        vMeth1_check_sum += l + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + i11;
    }

    public static void vMeth(int i) {

        int i12=4, i13=42463, i14=-196, i15=-53014, i16=-64581, i17=11, i18=2;
        byte by=-127;
        float f2=0.15F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, -71.821F);

        vMeth1(Test.instanceCount);
        Test.instanceCount ^= Test.iFld;
        for (i12 = 5; i12 < 248; i12++) {
            if (Test.bFld) {
                switch ((i12 % 2) + 122) {
                case 122:
                    for (i14 = 1; i14 < 7; ++i14) {
                        Test.instanceCount -= Test.instanceCount;
                        try {
                            Test.iFld = (i / 24413);
                            i13 = (-106 / i14);
                            i = (i15 / -8);
                        } catch (ArithmeticException a_e) {}
                        switch ((i12 % 5) + 71) {
                        case 71:
                            i16 |= (int)Test.instanceCount;
                            Test.iFld = 128;
                            by += (byte)(i14 * f2);
                        case 72:
                            for (i17 = 2; i17 > 1; --i17) {
                                Test.instanceCount /= (i15 | 1);
                                Test.iArrFld[i14 + 1] += (int)Test.instanceCount;
                            }
                            break;
                        case 73:
                            if (Test.bFld) break;
                            break;
                        case 74:
                            Test.iFld *= i17;
                            break;
                        case 75:
                            Test.iFld = i16;
                            break;
                        }
                    }
                    break;
                case 123:
                    by = (byte)-10387;
                    break;
                default:
                    fArr[i12 - 1] += i14;
                }
            } else {
                Test.instanceCount += i12;
            }
        }
        vMeth_check_sum += i + i12 + i13 + i14 + i15 + i16 + by + Float.floatToIntBits(f2) + i17 + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {


        vMeth(14);


        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.bFld = " + Test.instanceCount + "," + Test.iFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
