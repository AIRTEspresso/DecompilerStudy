// Generated by Java* Fuzzer test generator (1.0.001). Wed Jan  5 21:26:41 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=3125503453L;
    public static float fFld=1.855F;
    public int iFld=-250;
    public boolean bFld=false;
    public static byte byFld=-50;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3104454649035639001L);
        FuzzerUtils.init(Test.iArrFld, -180);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l) {

        int i3=4357, i4=-141, i5=8, i6=-13635, i7=14184, iArr[]=new int[N];
        float f=-127.506F;

        FuzzerUtils.init(iArr, 14);

        for (i3 = 13; i3 < 298; i3++) {
            i4 = (int)l;
            Test.instanceCount = i4;
            for (i5 = 6; 1 < i5; i5 -= 3) {
                i6 = 50295;
                i6 = i6;
            }
            Test.instanceCount += (((i3 * i5) + i3) - l);
            Test.lArrFld = Test.lArrFld;
            try {
                i4 = (209 % i5);
                iArr[i3 + 1] = (i5 % -151972265);
                i4 = (194 / i3);
            } catch (ArithmeticException a_e) {}
            i6 += i3;
            i7 = 1;
            do {
                switch (((i4 >>> 1) % 3) + 24) {
                case 24:
                    i4 = i6;
                    i4 += (i7 | i7);
                    i6 = i6;
                    break;
                case 25:
                    i6 += i7;
                    break;
                case 26:
                    f *= -12;
                    break;
                }
            } while (++i7 < 6);
        }
        long meth_res = l + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i2=-7, i8=0, i9=-13, i10=14, i11=76, i12=-51569;
        double d=-4.90408;
        byte by=-5;
        boolean b=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        i2 = (int)(((i2 + 2739312917L) + (Test.fFld * Test.fFld)) * iMeth1(Test.instanceCount));
        for (i8 = 17; i8 < 320; i8++) {
            for (d = 5; d > 1; d--) {
                Test.fFld = i8;
                i10 &= (int)1098965403867396474L;
                Test.instanceCount = 4;
                Test.fFld += (float)(d - by);
                i2 = i8;
                Test.instanceCount = 115;
            }
            for (i11 = 1; i11 < 5; ++i11) {
                bArr[i8 + 1] = b;
            }
        }
        by = (byte)51575L;
        i10 = i12;
        i9 = (int)279006534054588321L;
        i9 = i9;
        long meth_res = i2 + i8 + i9 + Double.doubleToLongBits(d) + i10 + by + i11 + i12 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=-10, i1=173, i13=1, i14=58, i15=5, i16=-14;
        boolean b1=false;
        byte by1=-29;

        for (i = 149; i > 7; i -= 2) {
            i1 <<= (iMeth() + i13);
            Test.iArrFld[i] += (int)Test.instanceCount;
            i13 -= i1;
            i1 += (((i * Test.fFld) + i1) - Test.instanceCount);
            Test.iArrFld[i - 1] = i;
            for (i14 = 1; 22 > i14; i14++) {
                i1 -= i1;
                i16 = 1;
                while (++i16 < 2) {
                    Test.lArrFld[i - 1] -= i;
                    Test.instanceCount += i13;
                    if (i14 != 0) {
                        vMeth_check_sum += i + i1 + i13 + i14 + i15 + i16 + (b1 ? 1 : 0) + by1;
                        return;
                    }
                    b1 = b1;
                    by1 = (byte)i16;
                    i15 >>= (int)2697119986L;
                }
            }
        }
        vMeth_check_sum += i + i1 + i13 + i14 + i15 + i16 + (b1 ? 1 : 0) + by1;
    }

    public void mainTest(String[] strArr1) {

        short s=30977;
        int i17=-14, i18=-44215, i20=0, i21=-111, i22=-11, i23=47, i24=61530;
        double d1=116.122250;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.154F);

        vMeth();
        Test.iArrFld[(iFld >>> 1) % N] = s;
        iFld *= s;
        fArr[(iFld >>> 1) % N] *= Test.instanceCount;
        for (i17 = 379; i17 > 2; i17 -= 3) {
            i18 += (((i17 * Test.instanceCount) + Test.instanceCount) - i18);
            switch ((((i18 >>> 1) % 1) * 5) + 25) {
            case 29:
                i18 = -87;
                iFld += (i17 | i17);
                break;
            default:
                Test.iArrFld[i17 + 1] += (int)Test.fFld;
                iFld -= (int)Test.instanceCount;
            }
            iFld += (((i17 * Test.instanceCount) + Test.instanceCount) - i18);
            s = (short)i17;
            Test.instanceCount = (long)Test.fFld;
            Test.fFld -= iFld;
        }
        for (int i19 : Test.iArrFld) {
            i20 = 1;
            while (++i20 < 63) {
                if (bFld) {
                    for (i21 = 1; i21 < 1; i21++) {
                        Test.iArrFld = Test.iArrFld;
                    }
                    Test.iArrFld[i20 + 1] *= i17;
                }
                bFld = bFld;
                iFld += (28758 + (i20 * i20));
                Test.instanceCount += i20;
                Test.byFld += (byte)i18;
                iFld += i20;
                Test.instanceCount = i17;
            }
            for (i23 = 63; i23 > 2; i23--) {
                d1 = -1013;
                i18 -= iFld;
            }
        }

        FuzzerUtils.out.println("s i17 i18 = " + s + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 d1 = " + i23 + "," + i24 + "," + Double.doubleToLongBits(d1));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + iFld);
        FuzzerUtils.out.println("bFld Test.byFld Test.lArrFld = " + (bFld ? 1 : 0) + "," + Test.byFld + "," +
            FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
