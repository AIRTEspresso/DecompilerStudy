class
Test
{
int
N
=
400
;
long
instanceCount
=
-
9L
;
int
iFld
=
7
;
double
dFld
=
-
66.79636
;
byte
byArrFld
[
]
=
new
byte
[
N
]
;
int
iArrFld
[
]
=
new
int
[
N
]
;
long
lArrFld
[
]
[
]
[
]
=
new
long
[
N
]
[
N
]
[
N
]
;
{
init
(
byArrFld
,
(
byte
)
-
56
)
;
}
int
iMeth
(
)
{
int
i6
=
-
93
;
switch
(
68
)
{
case
68
:
dFld
*=
instanceCount
;
iArrFld
[
(
iFld
>
>
>
1
)
%
N
]
=
(
int
)
(
(
iFld
=
(
int
)
(
dFld
+
iFld
)
)
-
instanceCount
)
;
}
long
meth_res
=
i6
;
return
(
int
)
meth_res
;
}
void
mainTest
(
String
[
]
strArr1
)
{
int
i
,
i2
,
i17
;
for
(
i
=
4
;
i
<
364
;
i
++
)
for
(
i2
=
3
;
70
>
i2
;
)
{
instanceCount
=
-
++
instanceCount
;
i2
-=
iMeth
(
)
;
for
(
i17
=
1
;
i17
<
2
;
++
i17
)
iArrFld
[
i17
-
1
]
=
(
int
)
instanceCount
;
}
System
.
out
.
println
(
"Test.byArrFld iArrFld lArrFld = "
+
checkSum
(
byArrFld
)
+
","
+
checkSum
(
iArrFld
)
+
","
+
checkSum
(
lArrFld
)
)
;
}
public
static
void
main
(
String
[
]
strArr
)
{
Test
_instance
=
new
Test
(
)
;
_instance
.
mainTest
(
strArr
)
;
}
void
init
(
byte
[
]
a
,
byte
seed
)
{
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
a
[
j
]
=
(
byte
)
(
j
%
2
==
0
?
seed
+
j
:
seed
-
j
)
;
}
long
checkSum
(
int
[
]
a
)
{
long
sum
=
0
;
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
sum
+=
a
[
j
]
/
(
j
+
1
)
+
a
[
j
]
%
(
j
+
1
)
;
return
sum
;
}
long
checkSum
(
byte
[
]
a
)
{
long
sum
=
0
;
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
sum
+=
a
[
j
]
/
(
j
+
1
)
+
a
[
j
]
%
(
j
+
1
)
;
return
sum
;
}
long
checkSum
(
Object
[
]
[
]
a
)
{
long
sum
=
0
;
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
sum
+=
checkSum
(
a
[
j
]
)
;
return
sum
;
}
long
checkSum
(
Object
[
]
a
)
{
long
sum
=
0
;
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
sum
+=
Math
.
pow
(
2
,
j
)
;
return
sum
;
}
}
