import
java
.
util
.
concurrent
.
atomic
.
AtomicLong
;
import
java
.
io
.
PrintStream
;
import
java
.
util
.
Random
;
public
class
Test
{
public
static
final
int
N
=
400
;
public
static
long
instanceCount
=
10205L
;
public
static
float
fFld
=
-
14.577F
;
public
short
sFld
=
-
16976
;
public
byte
byFld
=
-
52
;
public
int
iArrFld
[
]
=
new
int
[
N
]
;
public
static
boolean
bArrFld
[
]
=
new
boolean
[
N
]
;
static
{
init
(
Test
.
bArrFld
,
true
)
;
}
public
static
long
iMeth_check_sum
=
0
;
public
static
long
iMeth1_check_sum
=
0
;
public
static
long
vMeth_check_sum
=
0
;
public
void
mainTest
(
String
[
]
strArr1
)
{
int
i
=
-
229
,
i1
=
-
26146
,
i2
=
46
,
i3
=
-
160
,
i4
=
-
57288
,
i22
=
13
,
i23
=
1
,
i24
=
7
,
i25
=
42074
,
i26
=
0
,
i27
=
190
,
i28
=
-
12
;
double
d2
=
2.80172
;
boolean
b1
=
false
;
byte
byArr
[
]
=
new
byte
[
N
]
;
init
(
byArr
,
(
byte
)
45
)
;
Test
.
instanceCount
=
i
;
for
(
i1
=
238
;
i1
>
3
;
i1
--
)
{
for
(
i3
=
107
;
i3
>
4
;
i3
--
)
{
i4
=
(
int
)
(
Test
.
instanceCount
-=
(
iArrFld
[
i1
]
*
iMeth
(
sFld
)
)
)
;
Test
.
instanceCount
=
i3
;
}
byFld
=
(
byte
)
Test
.
instanceCount
;
Test
.
instanceCount
-=
i3
;
for
(
i22
=
2
;
i22
<
107
;
++
i22
)
{
i2
+=
(
(
(
i22
*
i23
)
+
i2
)
-
i3
)
;
for
(
i24
=
i22
;
i24
<
2
;
++
i24
)
{
i2
+=
(
int
)
Test
.
fFld
;
i4
>>>=
i2
;
i4
*=
(
int
)
d2
;
i
+=
(
30
+
(
i24
*
i24
)
)
;
byArr
[
i1
+
1
]
>>=
(
byte
)
Test
.
instanceCount
;
d2
+=
i25
;
}
}
for
(
i26
=
2
;
i26
<
107
;
++
i26
)
{
iArrFld
[
i26
+
1
]
+=
(
int
)
Test
.
fFld
;
Test
.
instanceCount
+=
i2
;
switch
(
(
i26
%
2
)
+
125
)
{
case
125
:
i28
=
1
;
do
{
iArrFld
[
i28
]
=
i4
;
i27
-=
-
19805
;
i
-=
-
64306
;
switch
(
(
(
i28
%
2
)
*
5
)
+
50
)
{
case
52
:
i25
=
i1
;
if
(
b1
)
{
}
Test
.
fFld
=
i25
;
i4
+=
i4
;
break
;
case
56
:
default
:
Test
.
instanceCount
+=
(
i28
*
i28
)
;
}
}
while
(
++
i28
<
2
)
;
case
126
:
}
}
}
System
.
out
.
println
(
"i i1 i2 = "
+
i
+
","
+
i1
+
","
+
i2
)
;
System
.
out
.
println
(
"i3 i4 i22 = "
+
i3
+
","
+
i4
+
","
+
i22
)
;
System
.
out
.
println
(
"i23 i24 i25 = "
+
i23
+
","
+
i24
+
","
+
i25
)
;
System
.
out
.
println
(
"d2 i26 i27 = "
+
Double
.
doubleToLongBits
(
d2
)
+
","
+
i26
+
","
+
i27
)
;
System
.
out
.
println
(
"i28 b1 byArr = "
+
i28
+
","
+
(
b1
?
1
:
0
)
+
","
+
checkSum
(
byArr
)
)
;
System
.
out
.
println
(
"Test.instanceCount Test.fFld sFld = "
+
Test
.
instanceCount
+
","
+
Float
.
floatToIntBits
(
Test
.
fFld
)
+
","
+
sFld
)
;
System
.
out
.
println
(
"byFld iArrFld Test.bArrFld = "
+
byFld
+
","
+
checkSum
(
iArrFld
)
+
","
+
checkSum
(
Test
.
bArrFld
)
)
;
System
.
out
.
println
(
"vMeth_check_sum: "
+
vMeth_check_sum
)
;
System
.
out
.
println
(
"iMeth1_check_sum: "
+
iMeth1_check_sum
)
;
System
.
out
.
println
(
"iMeth_check_sum: "
+
iMeth_check_sum
)
;
}
public
static
void
main
(
String
[
]
strArr
)
{
try
{
Test
_instance
=
new
Test
(
)
;
_instance
.
mainTest
(
strArr
)
;
}
catch
(
Exception
ex
)
{
System
.
out
.
println
(
ex
.
getClass
(
)
.
getCanonicalName
(
)
)
;
}
}
public
static
void
init
(
boolean
[
]
a
,
boolean
seed
)
{
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
{
a
[
j
]
=
(
j
%
2
==
0
)
?
seed
:
(
j
%
3
==
0
)
;
}
}
public
static
void
init
(
int
[
]
a
,
int
seed
)
{
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
{
a
[
j
]
=
(
j
%
2
==
0
)
?
seed
+
j
:
seed
-
j
;
}
}
public
static
void
init
(
byte
[
]
a
,
byte
seed
)
{
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
{
a
[
j
]
=
(
byte
)
(
(
j
%
2
==
0
)
?
seed
+
j
:
seed
-
j
)
;
}
}
public
static
long
checkSum
(
boolean
[
]
a
)
{
long
sum
=
0
;
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
{
sum
+=
(
a
[
j
]
?
j
+
1
:
0
)
;
}
return
sum
;
}
public
static
long
checkSum
(
int
[
]
a
)
{
long
sum
=
0
;
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
{
sum
+=
(
a
[
j
]
/
(
j
+
1
)
+
a
[
j
]
%
(
j
+
1
)
)
;
}
return
sum
;
}
public
static
long
checkSum
(
byte
[
]
a
)
{
long
sum
=
0
;
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
{
sum
+=
(
byte
)
(
a
[
j
]
/
(
j
+
1
)
+
a
[
j
]
%
(
j
+
1
)
)
;
}
return
sum
;
}
}
