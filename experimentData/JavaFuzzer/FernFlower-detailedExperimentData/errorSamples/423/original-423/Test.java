// Generated by Java* Fuzzer test generator (1.0.001). Wed Jan  5 23:52:57 2022
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=2L;
    public double dFld=2.3932;
    public short sFld=-27032;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {


        Test.instanceCount = Test.instanceCount;
        long meth_res = 0;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i2=-8;

        i2 *= (int)((Test.instanceCount = iMeth()) - i2);
        vMeth1_check_sum += i2;
    }

    public static void vMeth() {

        float f=-1.158F, fArr[]=new float[N];
        int i3=205, i4=19463, i5=7, i7=-61079, i8=29827, i9=-24574, i10=47170, iArr[]=new int[N];
        byte by=52;
        boolean b=false, bArr[]=new boolean[N];
        short s=20976;
        long l=-8L, lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, 11);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, 915069913L);
        FuzzerUtils.init(dArr, 65.126130);
        FuzzerUtils.init(fArr, -1.495F);

        vMeth1();
        f = Test.instanceCount;
        for (i3 = 3; i3 < 337; i3++) {
            double d=0.5860;
            i5 = 5;
            do {
                by = (byte)i4;
                iArr[i3] += (int)f;
                Test.instanceCount |= Test.instanceCount;
                if (false) break;
                Test.instanceCount = (long)1.979F;
            } while ((i5 -= 3) > 0);
            i4 += (175 + (i3 * i3));
            switch ((i3 * 5) + 82) {
            case 371:
            case 135:
                i4 -= i3;
                break;
            case 198:
                b = b;
                i4 *= (int)d;
                i4 = (int)Test.instanceCount;
                break;
            case 312:
                iArr[i3 + 1] += i3;
                break;
            case 296:
                bArr[i3] = b;
                break;
            case 357:
                f = i5;
                break;
            case 213:
            case 177:
                iArr = iArr;
                break;
            case 114:
                lArr[i3] = i3;
                break;
            case 247:
                i4 += i4;
                break;
            case 145:
                Test.instanceCount = 32877;
                break;
            case 333:
                i4 = i5;
                break;
            case 204:
                Test.instanceCount = i5;
                break;
            case 184:
                if (b) break;
                break;
            case 293:
                i4 += i3;
                break;
            case 187:
                s = (short)i5;
            case 207:
                i4 += (i3 ^ Test.instanceCount);
            case 234:
            case 388:
            case 89:
                Test.instanceCount += i3;
                break;
            case 347:
                i4 ^= i7;
                break;
            case 233:
                i4 >>>= i3;
                break;
            case 365:
                i7 = 155;
                break;
            case 226:
                l = (long)f;
                break;
            case 96:
                i7 -= i3;
            case 269:
                i4 = i3;
                break;
            case 267:
                dArr[i3 - 1] *= i7;
                break;
            case 108:
                i7 >>>= by;
            case 320:
                i4 -= (int)f;
                break;
            case 405:
                i7 = i5;
                break;
            case 178:
                l >>>= i8;
                break;
            case 259:
                i7 = (int)l;
                break;
            case 393:
                iArr[i3 - 1] -= (int)Test.instanceCount;
            case 91:
                s += (short)i3;
            case 274:
                i8 += i5;
            case 132:
                l = -41;
                break;
            case 253:
                f += i8;
                break;
            case 368:
                i7 += i7;
                break;
            case 264:
                try {
                    i8 = (163 / i8);
                    iArr[i3 - 1] = (-61964 / i7);
                    i8 = (i7 / i3);
                } catch (ArithmeticException a_e) {}
                break;
            case 420:
                i8 -= (int)l;
                break;
            case 305:
                f = f;
                break;
            case 188:
                if (i7 != 0) {
                    vMeth_check_sum += Float.floatToIntBits(f) + i3 + i4 + i5 + by + (b ? 1 : 0) + s + i7 + l + i8 + i9
                        + i10 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
            case 117:
                if (i5 != 0) {
                    vMeth_check_sum += Float.floatToIntBits(f) + i3 + i4 + i5 + by + (b ? 1 : 0) + s + i7 + l + i8 + i9
                        + i10 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                break;
            case 318:
                i7 -= i4;
                break;
            case 228:
                i4 = i8;
                break;
            case 418:
                i7 -= -27101;
                break;
            case 427:
                i4 += (i3 - l);
                break;
            case 421:
                i8 += i3;
            case 424:
            case 205:
                lArr[i3 - 1] *= -6;
                break;
            case 341:
                try {
                    i8 = (i9 % 57070);
                    iArr[i3 - 1] = (i5 / i3);
                    i10 = (i9 / i10);
                } catch (ArithmeticException a_e) {}
                break;
            case 276:
                i9 *= (int)d;
                break;
            case 225:
                i8 -= -11;
                break;
            case 95:
                f += i3;
                break;
            case 250:
                l += (i3 * i3);
            case 123:
                i10 = 126;
                break;
            case 98:
                lArr[i3 + 1] += -30993;
                break;
            case 126:
                Test.instanceCount *= (long)f;
            case 252:
                i8 = i4;
                break;
            case 334:
                i9 = (int)Test.instanceCount;
            case 289:
                if (b) break;
                break;
            case 402:
            case 311:
                lArr[i3] += 1;
                break;
            case 113:
                f -= i10;
            case 315:
                fArr = fArr;
                break;
            case 222:
                d *= l;
                break;
            case 118:
                Test.instanceCount >>>= 0;
                break;
            case 249:
                f -= l;
            case 165:
                f -= (float)d;
                break;
            case 319:
                iArr[i3 - 1] += i7;
                break;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i3 + i4 + i5 + by + (b ? 1 : 0) + s + i7 + l + i8 + i9 + i10 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-4, i1=-6, i11=-42801, i12=-9, i13=63822, i14=47, i15=-103, iArr1[]=new int[N];
        float f1=-38.561F;
        boolean b1=true;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, -39778);
        FuzzerUtils.init(lArr1, 63866L);

        for (i = 386; i > 14; --i) {
            byte by1=-111;
            vMeth();
            i1 += i;
            by1 = (byte)i1;
            iArr1[i] <<= i;
            i1 += i1;
            dFld += i1;
            i1 += (int)f1;
            for (i11 = 2; i11 < 68; ++i11) {
                i12 = i11;
                i1 = i11;
                i13 = 1;
                while (++i13 < 2) {
                    if (b1) break;
                    i12 = i;
                    try {
                        i12 = (-239 % i13);
                        iArr1[i13 + 1] = (i11 / i1);
                        iArr1[i11 - 1] = (i12 % i11);
                    } catch (ArithmeticException a_e) {}
                    iArr1[i13] = (int)f1;
                    f1 += (4 + (i13 * i13));
                    i1 >>= i1;
                    Test.instanceCount = i11;
                    i12 -= (int)dFld;
                    i1 = (int)Test.instanceCount;
                }
                i12 *= by1;
                for (i14 = 1; i14 < 2; ++i14) {
                    Test.instanceCount = i14;
                    i1 >>= i15;
                    i15 >>= -7;
                    lArr1[i11 + 1] *= sFld;
                    sFld += (short)i15;
                    iArr1[i + 1] += i11;
                    i1 += (i14 * i14);
                }
            }
        }

        FuzzerUtils.out.println("i i1 f1 = " + i + "," + i1 + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("b1 i14 i15 = " + (b1 ? 1 : 0) + "," + i14 + "," + i15);
        FuzzerUtils.out.println("iArr1 lArr1 = " + FuzzerUtils.checkSum(iArr1) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount dFld sFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + sFld);

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
