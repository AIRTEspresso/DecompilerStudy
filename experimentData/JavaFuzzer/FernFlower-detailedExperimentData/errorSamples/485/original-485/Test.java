// Generated by Java* Fuzzer test generator (1.0.001). Thu Jan  6 00:28:39 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=125L;
    public static float fFld=0.237F;
    public volatile short sFld=-20403;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 85.347F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f2, int i10, int i11) {


        Test.instanceCount ^= i11;
        Test.instanceCount *= 3129639821L;
        vMeth1_check_sum += Float.floatToIntBits(f2) + i10 + i11;
    }

    public static int iMeth() {

        float f1=-63.295F, f3=-1.290F;
        int i9=13, i12=142, i13=33329, i14=7;
        boolean b=true, bArr1[]=new boolean[N];
        double d1=0.102915;

        FuzzerUtils.init(bArr1, true);

        for (f1 = 227; f1 > 2; f1 -= 2) {
            vMeth1(f1, i9, i9);
            for (f3 = 1; f3 < 14; ++f3) {
                byte by1=49;
                bArr1[(int)(f3)] = b;
                Test.instanceCount <<= -47166;
                by1 = (byte)i12;
                i9 += (int)f3;
                Test.fArrFld[(int)(f3 + 1)] += i12;
                i9 >>>= i9;
                i9 += (int)(-6.319F + (f3 * f3));
                b = b;
                for (i13 = (int)(f3); 2 > i13; ++i13) {
                    d1 -= f1;
                    Test.instanceCount += (((i13 * i14) + i12) - i14);
                    Test.fFld += (i13 * i13);
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i9 + Float.floatToIntBits(f3) + i12 + (b ? 1 : 0) + i13 + i14 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(bArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(short s, float f) {

        int i1=30666, i2=-37, i3=13, i4=-5, i5=8, i6=71, i7=-6, i8=-10342, i15=2362, i16=234;
        byte by=13;
        double d=0.90843, dArr1[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -26019L);
        FuzzerUtils.init(dArr1, -1.73400);

        for (i1 = 291; i1 > 5; i1--) {
            for (i3 = 1; 6 > i3; i3++) {
                i5 /= (int)((lArr[i1] - by) | 1);
                Test.instanceCount *= i5;
                i6 *= i5;
                i5 *= (int)(d--);
                lArr[i3 - 1] = ((i6 += i3) + ((-(i4 >> i4)) * i5));
                for (i7 = 1; i7 < 2; i7++) {
                    d *= iMeth();
                }
                lArr[i3] += 18554;
                i8 = i2;
            }
            for (i15 = 6; i15 > 1; --i15) {
                dArr1[i15 + 1] *= Test.instanceCount;
                Test.instanceCount = i1;
                i5 += (i15 | (long)Test.fFld);
            }
        }
        vMeth_check_sum += s + Float.floatToIntBits(f) + i1 + i2 + i3 + i4 + i5 + by + i6 + Double.doubleToLongBits(d)
            + i7 + i8 + i15 + i16 + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=39558, i17=-4, i18=57256;
        float f4=0.91F;
        double d2=-11.97741, dArr[][]=new double[N][N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(dArr, -72.88200);

        bArr[(i >>> 1) % N] = bArr[(i >>> 1) % N];
        dArr[(i >>> 1) % N][(i >>> 1) % N] -= (dArr[(i >>> 1) % N][(i >>> 1) % N]++);
        vMeth(sFld, 124.485F);
        i = i;
        Test.instanceCount += i;
        f4 = 1;
        while (++f4 < 150) {
            i = 92;
            i = i;
        }
        for (i17 = 7; 157 > i17; i17++) {
            Test.instanceCount *= i17;
            Test.instanceCount += (((i17 * i18) + i18) - i);
        }
        d2 += i17;
        d2 -= Test.fFld;
        i18 = i18;

        FuzzerUtils.out.println("i f4 i17 = " + i + "," + Float.floatToIntBits(f4) + "," + i17);
        FuzzerUtils.out.println("i18 d2 bArr = " + i18 + "," + Double.doubleToLongBits(d2) + "," +
            FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + sFld);
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
