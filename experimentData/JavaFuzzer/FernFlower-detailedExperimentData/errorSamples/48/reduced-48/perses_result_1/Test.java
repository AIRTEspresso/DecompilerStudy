class
Test
{
int
N
=
400
;
long
instanceCount
=
-
3396066871785041809L
;
float
fFld
=
-
7.962F
;
byte
byFld
=
72
;
long
iMeth_check_sum
;
void
vMeth
(
int
i2
,
int
i3
)
{
int
i4
;
double
d1
=
44.49906
;
for
(
i4
=
7
;
i4
<
134
;
++
i4
)
switch
(
68
)
{
case
68
:
switch
(
i4
%
2
+
38
)
{
case
39
:
fFld
+=
fFld
;
instanceCount
*=
(
long
)
d1
;
}
i3
=
14
;
byFld
*=
i3
;
}
}
float
fMeth
(
long
l
,
int
i1
,
boolean
b
)
{
vMeth
(
i1
,
97
)
;
long
meth_res
=
l
;
return
meth_res
;
}
int
iMeth
(
byte
by
,
float
f
,
byte
by1
)
{
int
i
=
6
,
i12
,
i13
=
51583
,
i14
,
i15
=
209
,
iArr
[
]
=
new
int
[
N
]
;
double
d
=
0.24101
;
boolean
b1
=
false
;
float
f1
;
long
lArr
[
]
=
new
long
[
N
]
;
init
(
iArr
,
-
13088
)
;
init
(
lArr
,
7897112876680856121L
)
;
f
=
(
float
)
(
(
(
iArr
[
i
>
>
1
]
>>=
i
)
-
118.619F
)
-
(
d
-
instanceCount
)
)
;
i
=
(
int
)
(
fMeth
(
instanceCount
,
i
,
b1
)
+
fFld
)
;
i
+=
-
125
;
iArr
[
(
50525
>
>
1
)
%
N
]
*=
i
;
f1
=
1
;
do
{
for
(
i12
=
1
;
i12
<
6
;
++
i12
)
i
+=
i12
|
i
;
for
(
i14
=
1
;
i14
<
6
;
i14
++
)
{
i13
=
1638257376
%
i14
;
i15
=
16335
;
i13
+=
i14
;
}
}
while
(
++
f1
<
299
)
;
instanceCount
+=
f1
;
long
meth_res
=
by
+
Float
.
floatToIntBits
(
f
)
+
by1
+
i
+
Double
.
doubleToLongBits
(
d
)
+
Float
.
floatToIntBits
(
f1
)
+
i12
+
i13
+
i14
+
i15
+
checkSum
(
iArr
)
+
checkSum
(
lArr
)
;
iMeth_check_sum
+=
meth_res
;
return
(
int
)
meth_res
;
}
void
mainTest
(
String
[
]
strArr1
)
{
iMeth
(
byFld
,
fFld
,
byFld
)
;
System
.
out
.
println
(
"iMeth_check_sum: "
+
iMeth_check_sum
)
;
}
public
static
void
main
(
String
[
]
strArr
)
{
Test
_instance
=
new
Test
(
)
;
for
(
;
;
)
_instance
.
mainTest
(
strArr
)
;
}
void
init
(
long
[
]
a
,
long
seed
)
{
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
a
[
j
]
=
j
%
2
==
0
?
seed
+
j
:
seed
-
j
;
}
void
init
(
int
[
]
a
,
int
seed
)
{
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
a
[
j
]
=
j
%
2
==
0
?
seed
+
j
:
seed
-
j
;
}
long
checkSum
(
long
[
]
a
)
{
long
sum
=
0
;
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
sum
+=
a
[
j
]
/
(
j
+
1
)
+
a
[
j
]
%
(
j
+
1
)
;
return
sum
;
}
long
checkSum
(
int
[
]
a
)
{
long
sum
=
0
;
for
(
int
j
=
0
;
j
<
a
.
length
;
j
++
)
sum
+=
a
[
j
]
/
(
j
+
1
)
+
a
[
j
]
%
(
j
+
1
)
;
return
sum
;
}
}
