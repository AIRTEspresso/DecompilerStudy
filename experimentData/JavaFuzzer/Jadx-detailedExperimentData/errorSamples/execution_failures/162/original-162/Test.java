// Generated by Java* Fuzzer test generator (1.0.001). Wed Jan  5 22:29:10 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=11L;
    public static float fFld=1.846F;
    public volatile int iFld=9;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth() {

        int i3=-10, i4=228, i5=13, i6=-48284, i7=14, iArr1[]=new int[N];
        short s=62;
        float f1=27.650F;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -2223656525721366550L);
        FuzzerUtils.init(iArr1, 88);

        for (i3 = 5; i3 < 181; ++i3) {
            s >>>= (short)Test.instanceCount;
            Test.instanceCount = i4;
            i4 += (int)(-42L + (i3 * i3));
            for (i5 = 9; i5 > 1; i5 -= 3) {
                i4 <<= i3;
                i4 = (int)f1;
                if (b) {
                    switch ((i5 % 10) + 28) {
                    case 28:
                        lArr[i5 + 1] = (long)f1;
                        break;
                    case 29:
                        i6 >>= i4;
                        break;
                    case 30:
                        i4 >>= -234;
                        break;
                    case 31:
                        i7 = 1;
                        do {
                            iArr1[i5 + 1] *= (int)f1;
                            i6 &= i7;
                        } while (++i7 < 5);
                    case 32:
                        if (false) continue;
                        break;
                    case 33:
                        lArr[i3 + 1] <<= i5;
                    case 34:
                        i4 += (i5 * i5);
                        break;
                    case 35:
                        iArr1[(i4 >>> 1) % N] |= (int)Test.instanceCount;
                        break;
                    case 36:
                        i4 += (((i5 * Test.instanceCount) + Test.instanceCount) - i7);
                        break;
                    case 37:
                        i4 = i7;
                        break;
                    }
                } else {
                    i6 = i6;
                }
            }
        }
        long meth_res = i3 + i4 + s + i5 + i6 + Float.floatToIntBits(f1) + i7 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i1, int i2) {

        float f=-39.956F;
        int i8=1, i9=46, i10=9, i11=239, i12=-172, iArr2[]=new int[N];
        byte by=-47;

        FuzzerUtils.init(iArr2, 8558);

        i2 = 62;
        f -= fMeth();
        i8 = 1;
        while (++i8 < 331) {
            i9 = 1;
            while ((i9 += 3) < 5) {
                i2 += (i9 + i2);
                f -= by;
                iArr2[i8 + 1] = i8;
                for (i10 = i8; i10 < 5; ++i10) {
                    i11 += (((i10 * i2) + i8) - Test.instanceCount);
                    i1 += i10;
                    iArr2[i8 - 1] += i12;
                }
                i11 = -58;
                iArr2[i9] = (int)Test.fFld;
                Test.instanceCount = 58632;
                i12 = i9;
            }
        }
        vMeth1_check_sum += i1 + i2 + Float.floatToIntBits(f) + i8 + i9 + by + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr2);
    }

    public void vMeth(long l, int i) {

        int i13=29799, i14=121, i15=26896, i16=1515, i17=14841, i18=51, iArr3[]=new int[N];

        FuzzerUtils.init(iArr3, -3);

        vMeth1(44170, i);
        for (i13 = 11; 202 > i13; ++i13) {
            l >>= 2135098574L;
            i14 = -10416;
            i14 *= i14;
            iArr3[i13] <<= i13;
        }
        i14 <<= i13;
        i14 -= 40421;
        iArr3 = iArr3;
        for (i15 = 20; 397 > i15; i15++) {
            i14 = i15;
            iArr3[i15 - 1] *= i;
            for (i17 = 1; 4 > i17; i17++) {
                i = i17;
                if (i18 != 0) {
                    vMeth_check_sum += l + i + i13 + i14 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(iArr3);
                    return;
                }
            }
        }
        vMeth_check_sum += l + i + i13 + i14 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, -11272);

        iArr = (iArr = (iArr = iArr));
        vMeth(Test.instanceCount, iFld);

        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + iFld);

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
