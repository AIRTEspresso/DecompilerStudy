// Generated by Java* Fuzzer test generator (1.0.001). Thu Jan  6 00:36:16 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=2184208139L;
    public static volatile boolean bFld=false;
    public static float fFld=8.392F;
    public static volatile short sFld=18016;
    public byte byFld=-114;
    public volatile float fFld1=101.357F;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f) {

        int i3=63229, i4=157, i5=54533, i6=-13, i7=-5, i8=28, iArr1[]=new int[N];
        double d1=-93.39876;
        boolean bArr[]=new boolean[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, -5);
        FuzzerUtils.init(fArr, 1.235F);

        bArr[(i3 >>> 1) % N] = Test.bFld;
        i3 >>= i3;
        i4 = 1;
        do {
            i3 <<= (int)Test.instanceCount;
            for (i5 = 1; i5 < 7; ++i5) {
                iArr1[i5] += (int)Test.instanceCount;
                Test.instanceCount ^= i6;
                for (i7 = 1; i7 < 2; ++i7) {
                    if (Test.bFld) {
                        Test.instanceCount += -5;
                    }
                    fArr[i4 + 1] -= -3.869F;
                    switch ((((i3 >>> 1) % 2) * 5) + 39) {
                    case 45:
                        i3 -= (int)Test.instanceCount;
                        iArr1[i5 + 1] += (int)Test.fFld;
                        Test.instanceCount += (((i7 * i6) + i3) - Test.instanceCount);
                        break;
                    case 46:
                        d1 *= 137;
                    }
                }
            }
        } while (++i4 < 215);
        vMeth2_check_sum += Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i1, long l, boolean b) {

        int i2=-30357, i9=-58, i10=-59313, iArr[]=new int[N];
        double d2=-28.99413;
        long l1=-14L, lArr[]=new long[N];

        FuzzerUtils.init(iArr, -5297);
        FuzzerUtils.init(lArr, -11L);

        i2 = 1;
        while (++i2 < 249) {
            switch ((i2 % 2) + 97) {
            case 97:
                iArr[i2] += (i1 * i2);
                vMeth2(Test.fFld);
                break;
            case 98:
                l -= (long)1.949F;
                d2 += -10;
                break;
            }
            lArr[i2 - 1] += i2;
            for (i9 = i2; i9 < 7; ++i9) {
                l1 -= i1;
                i10 -= (int)l1;
                switch (((i9 % 1) * 5) + 97) {
                case 100:
                    i10 = -30;
                    break;
                default:
                    i10 >>= i10;
                    i10 *= (int)Test.instanceCount;
                    try {
                        i1 = (i1 / -857475700);
                        i10 = (i2 % 636779951);
                        i10 = (iArr[i2] / 19294);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        vMeth1_check_sum += i1 + l + (b ? 1 : 0) + i2 + Double.doubleToLongBits(d2) + i9 + i10 + l1 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(double d, int i) {

        int i11=2, i12=14, i13=8, i14=63445, i15=-163, iArr2[]=new int[N];
        double dArr[]=new double[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(dArr, -105.96575);
        FuzzerUtils.init(byArr, (byte)-112);
        FuzzerUtils.init(iArr2, -60323);

        vMeth1(i, Test.instanceCount, Test.bFld);
        Test.bFld = Test.bFld;
        i11 = 1;
        while (++i11 < 131) {
            dArr[i11] -= Test.fFld;
            for (i12 = 12; i12 > 1; i12 -= 2) {
                int i16=7;
                for (i14 = 1; i14 < 3; i14++) {
                    i = i11;
                    byArr[i14 + 1] = (byte)i15;
                    i += i14;
                    i += i12;
                    try {
                        i = (-95 % i12);
                        i15 = (i11 / iArr2[(i12 >>> 1) % N]);
                        i = (i % iArr2[i14 - 1]);
                    } catch (ArithmeticException a_e) {}
                    iArr2[i11 + 1] = i15;
                    i -= i;
                    Test.fFld %= (i15 | 1);
                }
                i >>= i16;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i11 + i12 + i13 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        double d3=-2.89466;
        int i17=4042, i18=188, i19=236, i20=-13, i21=69, i22=-12944, i23=58610, i24=17695, i25=-50958, i26=8, i27=-12,
            i28=-153, iArr3[][]=new int[N][N];

        FuzzerUtils.init(iArr3, -4);

        vMeth(d3, i17);
        i17 *= i17;
        iArr3[(i17 >>> 1) % N][(-248 >>> 1) % N] = i17;
        iArr3[(39 >>> 1) % N][(i17 >>> 1) % N] ^= 11;
        Test.instanceCount -= -81;
        d3 = Test.instanceCount;
        for (i18 = 17; i18 < 292; ++i18) {
            iArr3[i18 - 1][i18 - 1] = i18;
            for (i20 = 1; i20 < 91; ++i20) {
                Test.instanceCount = Test.instanceCount;
            }
            for (i22 = 3; i22 < 91; i22++) {
                iArr3[(-8 >>> 1) % N][i22 - 1] -= i24;
                i19 = i24;
                iArr3[i18 - 1][i18] *= -132;
                for (i25 = i22; i25 < 2; i25 += 2) {
                    i21 += (int)Test.fFld;
                    i21 |= (int)Test.instanceCount;
                    i17 >>= (int)Test.instanceCount;
                    Test.sFld = (short)i21;
                    Test.instanceCount *= i26;
                }
                switch ((i22 % 10) + 18) {
                case 18:
                    iArr3[i18 - 1][i18 + 1] &= i26;
                    break;
                case 19:
                    Test.fFld %= (i25 | 1);
                    try {
                        i21 = (i25 % 24621);
                        i17 = (i21 / -598520166);
                        iArr3[i18 - 1][i22 - 1] = (-66 / i25);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 20:
                    i21 += i22;
                    break;
                case 21:
                    Test.bFld = Test.bFld;
                    for (i27 = 1; i27 < 2; ++i27) {
                        Test.fFld -= i23;
                        i21 <<= Test.sFld;
                        byFld += (byte)62;
                    }
                    break;
                case 22:
                    Test.fFld -= i22;
                    break;
                case 23:
                    fFld1 += Test.instanceCount;
                case 24:
                    i23 = -65;
                    break;
                case 25:
                    i19 += (int)d3;
                    break;
                case 26:
                    i28 = 191;
                    break;
                case 27:
                    Test.instanceCount += (i22 * Test.instanceCount);
                default:
                    i28 *= i25;
                }
            }
        }

        FuzzerUtils.out.println("d3 i17 i18 = " + Double.doubleToLongBits(d3) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 iArr3 = " + i28 + "," + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.sFld byFld fFld1 = " + Test.sFld + "," + byFld + "," +
            Float.floatToIntBits(fFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
