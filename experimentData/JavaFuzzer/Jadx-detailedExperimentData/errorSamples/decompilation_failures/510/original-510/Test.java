// Generated by Java* Fuzzer test generator (1.0.001). Thu Jan  6 00:41:01 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static int iFld=14;
    public volatile double dArrFld[]=new double[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, long l2, short s) {

        int i3=14, i4=140, i5=50613, iArr[]=new int[N];
        float f=-1.342F, f1=-69.135F, f2=12.668F, fArr[]=new float[N];
        boolean b=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -54799);
        FuzzerUtils.init(fArr, 123.983F);
        FuzzerUtils.init(dArr, 88.119575);

        i3 = 1;
        while (++i3 < 159) {
            f += (i3 + i3);
            for (f1 = i3; f1 < 10; ++f1) {
                for (f2 = 1; f2 < 1; f2++) {
                    b = b;
                    s += (short)f2;
                    s |= (short)l1;
                    try {
                        i4 = (i3 % iArr[(int)(f1)]);
                        i5 = (i5 / 64);
                        Test.iFld = (i3 / i3);
                    } catch (ArithmeticException a_e) {}
                    fArr[i3 - 1] += l1;
                    i4 = (int)Test.instanceCount;
                    f -= -2;
                    Test.iFld = Test.iFld;
                }
                dArr[(int)(f1 + 1)] += s;
                i4 *= (int)f;
                Test.instanceCount = i5;
            }
        }
        vMeth2_check_sum += l1 + l2 + s + i3 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i4 +
            Float.floatToIntBits(f2) + i5 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(int i1) {

        byte by1=-90;
        int i2=-99, i6=-13, i7=-11, i8=-11, i9=21, iArr1[]=new int[N];
        boolean b1=false;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr1, 32);
        FuzzerUtils.init(sArr, (short)-27132);

        by1 = (byte)(++Test.instanceCount);
        i2 = 130;
        do {
            vMeth2(Test.instanceCount, Test.instanceCount, (short)(31255));
            i6 = 1;
            do {
                i1 += i6;
            } while (++i6 < 12);
            if (b1) break;
            for (i7 = 12; i7 > 1; i7 -= 3) {
                switch ((((i9 >>> 1) % 3) * 5) + 60) {
                case 63:
                    Test.instanceCount += i7;
                    iArr1[i2] += (int)Test.instanceCount;
                    i8 >>= Test.iFld;
                    sArr[i2 - 1] -= (short)41;
                    break;
                case 71:
                case 65:
                    Test.instanceCount -= i7;
                    i8 += i7;
                    Test.iFld += (((i7 * i1) + Test.instanceCount) - i1);
                    break;
                }
            }
        } while (--i2 > 0);
        vMeth1_check_sum += i1 + by1 + i2 + i6 + (b1 ? 1 : 0) + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i, byte by) {


        vMeth1(Test.iFld);
        vMeth_check_sum += i + by;
    }

    public void mainTest(String[] strArr1) {

        long l=13L, lArr[][]=new long[N][N];
        byte by2=-55;
        int i10=199, i11=2, i12=-1, i13=1589, i14=-11, i15=125, iArr2[][]=new int[N][N];
        float f4=-1.321F, fArr1[]=new float[N];
        double d=36.72546;
        boolean b2=false;

        FuzzerUtils.init(fArr1, 1.381F);
        FuzzerUtils.init(lArr, 64005L);
        FuzzerUtils.init(iArr2, -1);

        l = 1;
        do {
            vMeth(Test.iFld, by2);
            Test.instanceCount += Test.iFld;
            by2 += (byte)l;
        } while (++l < 282);
        lArr = lArr;
        for (i10 = 2; 365 > i10; i10++) {
            for (i12 = 1; i12 < 69; ++i12) {
                Test.instanceCount += i12;
                Test.iFld = -136;
                switch ((((i12 >>> 1) % 1) * 5) + 44) {
                case 49:
                    f4 = Test.iFld;
                    i13 -= (int)f4;
                    break;
                }
                switch (((i10 % 2) * 5) + 93) {
                case 102:
                    i11 *= i10;
                    d = 1;
                    do {
                        if (b2) break;
                        iArr2[i10 - 1][(int)(d)] = i12;
                        dArrFld = FuzzerUtils.double1array(N, (double)84.12739);
                        f4 += (float)(d - by2);
                        Test.iFld -= (int)f4;
                        Test.iFld += -156;
                    } while (++d < 2);
                    Test.iFld = (int)61790L;
                    Test.instanceCount = Test.instanceCount;
                case 95:
                    by2 = (byte)Test.iFld;
                    iArr2[i10] = FuzzerUtils.int1array(N, (int)-206);
                    f4 *= Test.iFld;
                default:
                    for (i14 = 1; i14 < 2; i14++) {
                        iArr2[i10][i14] += (int)Test.instanceCount;
                        Test.iFld += i10;
                        i15 -= i14;
                    }
                }
            }
        }

        FuzzerUtils.out.println("l by2 i10 = " + l + "," + by2 + "," + i10);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("f4 d b2 = " + Float.floatToIntBits(f4) + "," + Double.doubleToLongBits(d) + "," + (b2
            ? 1 : 0));
        FuzzerUtils.out.println("i14 i15 fArr1 = " + i14 + "," + i15 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));
        FuzzerUtils.out.println("lArr iArr2 = " + FuzzerUtils.checkSum(lArr) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld dArrFld = " + Test.instanceCount + "," + Test.iFld + ","
            + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
