// Generated by Java* Fuzzer test generator (1.0.001). Thu Jan  6 00:28:43 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -2);
        FuzzerUtils.init(Test.lArrFld, -10L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l1, int i6, byte by) {

        double d1=42.10088, d2=-1.22150;
        int i7=42003, i8=28126, i9=10176;
        float f1=2.306F, f2=1.427F;

        i6 = i6;
        d1 -= 4132596174L;
        for (d2 = 11; d2 < 193; ++d2) {
            d1 -= l1;
            i6 = (int)Test.instanceCount;
            for (f1 = 1; f1 < 9; ++f1) {
                i9 = 1;
                do {
                    by -= (byte)i7;
                    i8 = i9;
                    i6 += i7;
                    i6 >>= -63294;
                    f2 = i6;
                    l1 = i8;
                } while (++i9 < 2);
                i8 ^= i8;
                i7 = i9;
            }
        }
        long meth_res = l1 + i6 + by + Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + i7 +
            Float.floatToIntBits(f1) + i8 + i9 + Float.floatToIntBits(f2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i5=-44330, i10=51618, i11=19378, i12=21, i13=-3, i14=3, i15=-60757, i16=-7;
        long l2=121L, lArr[]=new long[N];
        byte by1=116;
        boolean b=false;
        float fArr[]=new float[N];
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(fArr, 1.714F);
        FuzzerUtils.init(lArr, -5L);
        FuzzerUtils.init(sArr, (short)-1036);

        fArr[(i5 >>> 1) % N] = (((i5 = i5) * (-33 >> (i5 - i5))) + iMeth1(l2, i5, by1));
        if (b) {
            Test.iArrFld[(i5 >>> 1) % N] -= i5;
            for (i10 = 16; i10 < 370; i10 += 2) {
                for (i12 = i10; i12 < 9; i12 += 2) {
                    l2 *= -62477;
                    switch ((((i13 >>> 1) % 2) * 5) + 104) {
                    case 110:
                        i14 = 1;
                        while (++i14 < 1) {
                            lArr[i10] = i10;
                            i11 = i12;
                        }
                        for (i15 = 1; i15 < 1; i15++) {
                            i5 += (i15 + i13);
                            sArr[i15][i10 - 1] *= (short)22390;
                            i11 *= -42829;
                        }
                        if (b) continue;
                        break;
                    case 106:
                        i13 += (((i12 * i16) + i14) - l2);
                        break;
                    }
                }
            }
        } else {
            Test.instanceCount *= i14;
        }
        vMeth_check_sum += i5 + l2 + by1 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(sArr);
    }

    public int iMeth(int i2, long l) {

        int i3=149, i4=214, i17=-2601, i18=-46;
        boolean b1=true;
        float f3=89.452F;

        for (i3 = 5; i3 < 144; i3++) {
            vMeth();
            for (i17 = 11; i17 > 1; i17--) {
                if (b1) {
                    Test.iArrFld[i3 - 1] <<= i4;
                    i18 |= i18;
                    i4 -= i17;
                }
                f3 *= i3;
                Test.iArrFld[i17 + 1] = (int)l;
                if (b1) break;
                i4 += i18;
                l += i17;
                f3 = Test.instanceCount;
                i4 = 12230;
                i2 += -29070;
            }
        }
        long meth_res = i2 + l + i3 + i4 + i17 + i18 + (b1 ? 1 : 0) + Float.floatToIntBits(f3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=2, i1=49, i19=-2, i20=-119, i21=29509, i22=27087, i23=-34, i24=-58974, i25=204, i26=-23, i27=34692;
        double d=85.117837, d3=1.13577;
        byte by2=-3;
        float f4=0.446F, fArr1[]=new float[N];
        short s=17022;

        FuzzerUtils.init(fArr1, 0.682F);

        i = (i * i);
        for (d = 7; d < 282; ++d) {
            float f=0.952F;
            Test.iArrFld[(int)(d - 1)] = (int)(f++);
            i <<= (int)((i1++) - ((Test.instanceCount * Test.instanceCount) * (51722 * iMeth(i, Test.instanceCount))));
            Test.iArrFld[(int)(d + 1)] -= i19;
        }
        i1 = i1;
        Test.instanceCount *= by2;
        Test.instanceCount = i;
        for (i20 = 312; i20 > 2; i20--) {
            i19 *= i20;
            d3 = Test.instanceCount;
            f4 = i;
        }
        for (i22 = 18; i22 < 359; ++i22) {
            i21 += (i22 * by2);
            try {
                i1 = (i20 / -17962);
                Test.iArrFld[i22] = (-1837306553 / Test.iArrFld[i22 - 1]);
                i1 = (i20 % -7);
            } catch (ArithmeticException a_e) {}
            i19 = -55103;
            switch ((i22 % 5) + 99) {
            case 99:
                i23 = i20;
                i += (((i22 * i1) + i23) - Test.instanceCount);
                by2 = (byte)i1;
                by2 += (byte)Test.instanceCount;
                break;
            case 100:
                for (i24 = 74; i24 > i22; i24 -= 3) {
                    i25 &= s;
                    if (bFld) break;
                    fArr1[i24 + 1] -= by2;
                    for (i26 = 1; 1 > i26; i26++) {
                        i25 = i23;
                        i21 >>= 10;
                        f4 -= 12;
                        i21 *= by2;
                    }
                }
            case 101:
                Test.lArrFld = Test.lArrFld;
            case 102:
                i21 += (i22 ^ i19);
            case 103:
                if (bFld) continue;
            default:
                i <<= i24;
            }
        }

        FuzzerUtils.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
        FuzzerUtils.out.println("i19 by2 i20 = " + i19 + "," + by2 + "," + i20);
        FuzzerUtils.out.println("i21 d3 f4 = " + i21 + "," + Double.doubleToLongBits(d3) + "," +
            Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 s i26 = " + i25 + "," + s + "," + i26);
        FuzzerUtils.out.println("i27 fArr1 = " + i27 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount bFld Test.iArrFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) +
            "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
