// Generated by Java* Fuzzer test generator (1.0.001). Thu Jan  6 01:45:54 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=1818248298180143934L;
    public static double dFld=-1.17150;
    public static int iFld=2;
    public int iFld1=-6;
    public static boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 189);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static void vMeth(long l, int i2, long l1) {

        int i3=-221, i4=1, i5=-104;

        i3 = 1;
        do {
            for (i4 = 1; i4 < 5; i4++) {
                Test.dFld *= (l1 += ((Test.iArrFld[i3]--) - i3));
            }
        } while (++i3 < 372);
        vMeth_check_sum += l + i2 + l1 + i3 + i4 + i5;
    }

    public static int iMeth(int i6) {

        int i7=-50050, i8=-60196, i9=-55;
        byte by=33;
        boolean b1=true;
        short s=5878;

        vMeth(1555838649L, -8, Test.instanceCount);
        if (b1) {
            i6 >>>= i6;
            i7 = 1;
            do {
                float f=97.862F;
                f = by;
                i6 = i7;
            } while (++i7 < 368);
        }
        i8 = 1;
        while (++i8 < 125) {
            s += (short)(i8 ^ i7);
            s += (short)i7;
        }
        i6 -= i6;
        i9 = 1;
        while (++i9 < 134) {
            if (i7 != 0) {
            }
            i6 = -33279;
            i6 -= (int)14L;
            if (b1) break;
        }
        long meth_res = i6 + i7 + by + (b1 ? 1 : 0) + i8 + s + i9;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i) {

        boolean b=false, bArr[]=new boolean[N];
        int i1=-5, i10=-217, i11=11488, i12=58, i13=-9;
        short s1=20268;
        long lArr[]=new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, -46L);

        b = bArr[(i1 >>> 1) % N];
        Test.instanceCount = i1;
        vMeth(Math.min(Test.instanceCount, (long)(i1 - -1.472F) << iMeth(-45840)), i1, 0L);
        for (i10 = 9; i10 < 328; i10++) {
            float f1=0.726F;
            f1 = i10;
            Test.instanceCount = -177;
            if (false) {
                i11 += (i10 ^ s1);
            } else {
                for (i12 = i10; i12 < 5; i12++) {
                    i += i12;
                    if (false) continue;
                    f1 += i13;
                    i13 += (int)f1;
                    i1 -= 43;
                    lArr[i10] *= i12;
                }
            }
        }
        long meth_res = i + (b ? 1 : 0) + i1 + i10 + i11 + s1 + i12 + i13 + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14=12, i15=-171, i16=28696, i17=-8, i18=-23, i19=-186, i20=-40013;
        float f2=2.345F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 3697874498L);

        Test.dFld = (Test.instanceCount--);
        Test.instanceCount -= lMeth(Test.iFld);
        Test.iArrFld[(iFld1 >>> 1) % N] = iFld1;
        lArr1[(Test.iFld >>> 1) % N] = (long)Test.dFld;
        for (i14 = 9; i14 < 254; i14++) {
            iFld1 = i15;
            i15 += (i14 | i15);
            Test.iFld *= (int)Test.dFld;
            i15 += i14;
            for (i16 = i14; i16 < 103; i16++) {
                i17 *= 14398;
                Test.instanceCount -= i16;
                iFld1 *= (int)1.373F;
                i17 += (int)63512L;
                if (true) {
                    switch (((i16 % 2) * 5) + 87) {
                    case 93:
                        f2 += (((i16 * Test.instanceCount) + i18) - Test.instanceCount);
                        Test.bFld = Test.bFld;
                        Test.iFld = i17;
                        break;
                    case 89:
                        i15 *= Test.iFld;
                        i18 = (int)Test.instanceCount;
                        for (i19 = 1; i19 < 1; i19 += 3) {
                            i18 *= 233;
                            iFld1 >>= i15;
                            Test.instanceCount = Test.instanceCount;
                            Test.iArrFld = Test.iArrFld;
                            i20 += (i19 - i14);
                            Test.instanceCount += i19;
                            lArr1[i16 + 1] >>>= i20;
                            Test.bFld = Test.bFld;
                        }
                        break;
                    }
                } else if (false) {
                    i15 &= i19;
                } else if (Test.bFld) {
                    Test.instanceCount &= i16;
                } else {
                    i17 += i16;
                }
            }
        }

        FuzzerUtils.out.println("i14 i15 i16 = " + i14 + "," + i15 + "," + i16);
        FuzzerUtils.out.println("i17 f2 i18 = " + i17 + "," + Float.floatToIntBits(f2) + "," + i18);
        FuzzerUtils.out.println("i19 i20 lArr1 = " + i19 + "," + i20 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.iFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.iFld);
        FuzzerUtils.out.println("iFld1 Test.bFld Test.iArrFld = " + iFld1 + "," + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest iMeth
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
