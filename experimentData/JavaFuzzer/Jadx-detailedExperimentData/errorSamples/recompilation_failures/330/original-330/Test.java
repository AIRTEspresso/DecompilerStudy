// Generated by Java* Fuzzer test generator (1.0.001). Wed Jan  5 23:28:36 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3156L;
    public static int iFld=-16;
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 2.106392);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d, int i8) {

        int i9=-22827, i10=28953, i11=-1, i12=-127, i13=1, iArr2[][]=new int[N][N];
        short s=17258;

        FuzzerUtils.init(iArr2, 11);

        d += Test.iFld;
        for (i9 = 9; i9 < 396; ++i9) {
            d += i9;
            s += (short)(i9 * i9);
            for (i11 = 1; i11 < 4; i11++) {
                i10 = (int)-2344070798L;
                i13 = 2;
                while (--i13 > 0) {
                    s = (short)Test.instanceCount;
                    Test.instanceCount >>>= i10;
                    Test.instanceCount = i13;
                    i12 = 54;
                }
                iArr2[i11][i9] = 35521;
                Test.instanceCount += (i11 * i11);
                i10 += i10;
                Test.instanceCount *= i10;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i8 + i9 + i10 + s + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth() {

        double d1=-2.76719;
        int i14=230, i15=-65448, i16=12, i17=-4068, i18=38841, i19=10, iArr1[]=new int[N];
        boolean b1=false;

        FuzzerUtils.init(iArr1, -94);

        Test.iFld = (iArr1[(Test.iFld >>> 1) % N]++);
        Test.dArrFld[(Test.iFld >>> 1) % N] = Test.iFld;
        vMeth1(d1, Test.iFld);
        Test.instanceCount *= Test.iFld;
        Test.iFld = 70;
        for (i14 = 4; i14 < 302; ++i14) {
            for (i16 = 6; i16 > 1; --i16) {
                i18 = 1;
                while (++i18 < 2) {
                    b1 = b1;
                    try {
                        i17 = (iArr1[i16 - 1] / 168);
                        i17 = (-52206 / iArr1[i16 + 1]);
                        i19 = (i17 / -1623556157);
                    } catch (ArithmeticException a_e) {}
                    Test.iFld >>= i16;
                    switch ((i18 % 2) + 106) {
                    case 106:
                        i17 -= (int)Test.instanceCount;
                        i19 -= i14;
                    case 107:
                        i15 -= Test.iFld;
                        break;
                    default:
                        i17 &= (int)Test.instanceCount;
                    }
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + i14 + i15 + i16 + i17 + i18 + (b1 ? 1 : 0) + i19 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f, int i2) {

        int i3=36626, i4=141, i5=-199, i6=-63754, i7=4, iArr[]=new int[N];
        boolean b=false;
        double d2=0.79241;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -10);
        FuzzerUtils.init(lArr, 14L);

        for (i3 = 7; i3 < 132; ++i3) {
            i2 >>= (++iArr[i3]);
            i5 = 1;
            while (++i5 < 13) {
                for (i6 = 1; 1 > i6; i6++) {
                    if (b) {
                        b = b;
                        Test.instanceCount = (long)(((i3 + f) - 0.52) + (--Test.iFld));
                        i2 = iMeth();
                    } else {
                        if (b) continue;
                        lArr = lArr;
                        f += i6;
                    }
                    f += (((i6 * i4) + i6) - Test.iFld);
                    Test.instanceCount = (long)d2;
                    Test.iFld -= i6;
                    Test.instanceCount -= i2;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + i7 + (b ? 1 : 0) +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=141, i1=-4;
        float f1=0.275F;
        short s1=1714;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 8990460574384986545L);

        for (i = 7; i < 383; i += 3) {
            vMeth(f1, i);
        }
        s1 -= (short)i;
        i1 &= i;
        i1 = Test.iFld;
        lArr1[(i1 >>> 1) % N] += (long)f1;

        FuzzerUtils.out.println("i i1 f1 = " + i + "," + i1 + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("s1 lArr1 = " + s1 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.dArrFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
