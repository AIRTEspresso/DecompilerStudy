// Generated by Java* Fuzzer test generator (1.0.001). Wed Jan  5 23:14:36 2022
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2034554388294346798L;
    public static volatile int iFld=54234;
    public static double dFld=-1.29473;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -52);
        FuzzerUtils.init(Test.sArrFld, (short)22622);
        FuzzerUtils.init(Test.lArrFld, -1L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7, int i8, int i9) {

        int i10=-14, i11=14944, i12=-6838, i13=64016, i14=-10, i15=-60950, i16=-4;
        double d1=14.66578;
        byte by=34;
        float f1=2.271F;

        for (i10 = 236; i10 > 4; i10--) {
            for (i12 = 1; i12 < 7; i12++) {
                if (Test.iFld != 0) {
                    vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + by + i14 +
                        i15 + i16 + Float.floatToIntBits(f1);
                    return;
                }
                Test.instanceCount -= i13;
                Test.instanceCount *= Test.instanceCount;
            }
            Test.instanceCount = (long)d1;
            by = (byte)d1;
        }
        Test.sArrFld[(53 >>> 1) % N] = (short)i7;
        i11 = i11;
        i14 = 1;
        while (++i14 < 380) {
            i11 = i12;
            for (i15 = 1; 4 > i15; ++i15) {
                Test.instanceCount = (long)d1;
                Test.iArrFld[i14] *= i14;
                f1 *= 2.819F;
            }
        }
        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + by + i14 + i15 + i16 +
            Float.floatToIntBits(f1);
    }

    public static void vMeth1(int i4) {

        int i5=62902, i6=-60, i17=-218, i18=-217, i19=2938, i20=36, iArr[]=new int[N];
        float f2=109.650F, fArr[]=new float[N];
        boolean b=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 2.125508);
        FuzzerUtils.init(fArr, -1.429F);
        FuzzerUtils.init(iArr, -44480);

        for (i5 = 8; i5 < 277; i5++) {
            Test.iArrFld[i5] *= (int)Long.reverseBytes(++Test.instanceCount);
            vMeth2(i4, i4, i4);
            Test.iFld += i5;
            Test.iArrFld[i5 - 1] += i6;
            Test.instanceCount *= i5;
            i4 += i6;
            for (i17 = 1; 6 > i17; ++i17) {
                i4 = i17;
                switch (((i17 % 10) * 5) + 93) {
                case 141:
                case 112:
                    dArr[i17 + 1] /= (Test.instanceCount | 1);
                    break;
                case 122:
                    for (i19 = i17; i19 < 2; i19++) {
                        Test.lArrFld[(-191 >>> 1) % N] = Test.instanceCount;
                        i20 = i17;
                        Test.instanceCount += (i19 ^ Test.instanceCount);
                    }
                    break;
                case 120:
                    if (i6 != 0) {
                        vMeth1_check_sum += i4 + i5 + i6 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f2) + (b ? 1 :
                            0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    break;
                case 105:
                    fArr[i17 + 1] += i19;
                    break;
                case 135:
                    i20 += (i17 ^ (long)f2);
                    break;
                case 109:
                    try {
                        Test.iFld = (12524 % i5);
                        i18 = (Test.iFld % i4);
                        Test.iArrFld[i5] = (-114 % Test.iArrFld[i5 - 1]);
                    } catch (ArithmeticException a_e) {}
                case 123:
                    Test.iArrFld = iArr;
                    break;
                case 102:
                    if (b) continue;
                case 103:
                    Test.lArrFld[i5] *= i20;
                    break;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f2) + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(float f, int i2, int i3) {

        int i21=191, i22=-206, i24=141, i25=-3;
        boolean b1=false;
        byte by1=-13;

        vMeth1(i3);
        i3 = (int)Test.dFld;
        for (i21 = 2; 166 > i21; ++i21) {
            short s=-14529;
            f = -57754L;
            Test.instanceCount += 37;
            s += (short)(((i21 * Test.instanceCount) + i21) - i3);
            for (i24 = 10; i24 > i21; i24 -= 2) {
                i22 += (i24 | i21);
                i3 = i22;
                if (b1) break;
                by1 = (byte)-141;
                i2 -= (int)Test.instanceCount;
                i22 = (int)Test.instanceCount;
                i25 -= (int)-7892718552428009232L;
                Test.iFld += (i24 - f);
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i2 + i3 + i21 + i22 + i24 + i25 + (b1 ? 1 : 0) + by1;
    }

    public void mainTest(String[] strArr1) {

        double d=-69.29982;
        int i=0, i1=-137, i26=-10, i27=-6323, i28=38814, i29=-36987, i30=-67, i31=22345, i32=-13, i33=8, iArr1[][]=new
            int[N][N];
        float f3=-4.442F;
        long l=-36101L;

        FuzzerUtils.init(iArr1, 3);

        d -= Test.iFld;
        for (i = 12; i < 196; ++i) {
            i1 = (i1--);
            vMeth(f3, Test.iFld, i);
            Test.iArrFld = FuzzerUtils.int1array(N, (int)6);
            Test.instanceCount = i;
            for (i26 = 7; i26 < 136; i26++) {
                Test.iFld = Test.iFld;
            }
            for (l = 1; l < 136; ++l) {
                i28 += (int)f3;
                Test.bFld = Test.bFld;
                Test.iFld += i26;
                Test.instanceCount <<= i;
                if (Test.bFld) break;
                iArr1 = iArr1;
                Test.iFld -= (int)d;
                i1 = Test.iFld;
            }
        }
        for (i29 = 348; i29 > 6; i29 -= 2) {
            i1 *= (int)Test.instanceCount;
            Test.iArrFld[i29 + 1] = (int)Test.instanceCount;
            if (Test.bFld) {
                for (i31 = 1; i31 < 147; i31++) {
                    Test.iFld = i26;
                    i30 -= (int)Test.instanceCount;
                    i33 = 2;
                    do {
                        Test.lArrFld = Test.lArrFld;
                        Test.instanceCount -= (long)1.396F;
                        Test.instanceCount += i29;
                        i27 += i33;
                    } while (--i33 > 0);
                    Test.iFld = (int)l;
                }
            } else {
                i1 += (i29 - i28);
            }
        }

        FuzzerUtils.out.println("d i i1 = " + Double.doubleToLongBits(d) + "," + i + "," + i1);
        FuzzerUtils.out.println("f3 i26 i27 = " + Float.floatToIntBits(f3) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("l i28 i29 = " + l + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("i33 iArr1 = " + i33 + "," + FuzzerUtils.checkSum(iArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld Test.iArrFld Test.sArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.sArrFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
